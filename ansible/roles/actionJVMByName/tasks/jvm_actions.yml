---
- name: Getting JVM Status before executing action
  shell: "/usr/bin/nohup {{LIBERTY_HOME}}/bin/server status {{jvm_name}}"
  register: prior_jvm_status
  failed_when: '"FAILED" in prior_jvm_status.stderr'
  when: "action == 'stop' or action == 'start' or action == 'restart' or action == 'status'"

- name: Executing stop on JVM Process "{{jvm_name}}"
  shell: "/usr/bin/nohup {{LIBERTY_HOME}}/bin/server stop {{jvm_name}}"
  register: stop_output
  when: "'is running with' in prior_jvm_status.stdout  and (action == 'stop' or action == 'restart')"
  failed_when: "'FAILED' in stop_output.stderr or stop_output.rc|int!=0"
  async: 180
  poll: 10

- shell : "echo `ps aux | grep -i {{jvm_name}} | grep WebSphere | grep -v grep | grep -v stop | awk '{print $2}'`"
  register: serverpid
  when: "'is running with' in prior_jvm_status.stdout  and (action == 'stop' or action == 'restart')"

- name: Checking if "{{jvm_name}}" running and killing if needed
  shell: "kill -9 {{serverpid.stdout}}"
  when: "('is running with' in prior_jvm_status.stdout  and (action == 'stop' or action == 'restart')) and (serverpid is defined and serverpid.stdout != '' and serverpid.stdout|int > 0)"
  ignore_errors: true

- name: Executing start on JVM Process "{{jvm_name}}"
  shell: "/usr/bin/nohup {{LIBERTY_HOME}}/bin/server start {{jvm_name}} --clean"
  register: start_output
  when: "('is not running' in prior_jvm_status.stdout and action == 'start') or action == 'restart'"
  failed_when: '"FAILED" in start_output.stderr or start_output.rc|int!=0'
  async: 180
  poll: 10

- name: Getting JVM Status after completing action
  shell: "/usr/bin/nohup {{LIBERTY_HOME}}/bin/server status {{jvm_name}}"
  register: final_jvm_status
  failed_when: '"FAILED" in final_jvm_status.stderr'

- name: Printing JVM Status
  debug:
    msg: "{{final_jvm_status.stdout}}"
