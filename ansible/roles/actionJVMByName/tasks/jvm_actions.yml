---
- name: 
  shell: "/usr/bin/nohup {{LIBERTY_HOME}}/bin/server status {{jvm_name}}"
  register: jvm_current_status
  failed_when: '"FAILED" in jvm_current_status.stderr'

- name: Executing stop on JVM Process "{{jvm_name}}"
  shell: "/usr/bin/nohup {{LIBERTY_HOME}}/bin/server {{action}} {{jvm_name}} --clean"
  register: comm_output
  when: "'is running with' in jvm_current_status.stdout  and (action == 'stop' or action == 'restart')"
  failed_when: "'FAILED' in comm_output.stderr or comm_output.rc|int!=0"
  async: 120
  poll: 10

- shell : "echo `ps aux | grep -i {{jvm_name}} | grep WebSphere | grep -v grep | grep -v stop | awk '{print $2}'`"
  register: serverpid
  when: "'is running with' in jvm_current_status.stdout  and (action == 'stop' or action == 'restart')"

- name: Checking if "{{jvm_name}}" running and killing if needed
  shell: "kill -9 {{serverpid.stdout}}"
  when: "(action == 'stop' or action == 'restart') and (serverpid is defined and serverpid.stdout != '' and serverpid.stdout|int > 0)"
  ignore_errors: true

- name: Executing start on JVM Process "{{jvm_name}}"
  shell: "/usr/bin/nohup {{LIBERTY_HOME}}/bin/server start {{jvm_name}} --clean"
  register: comm_output
  when: "('is not running' in jvm_current_status.stdout and action == 'start') or action == 'restart'"
  failed_when: '"FAILED" in comm_output.stderr or comm_output.rc|int!=0'
  async: 120
  poll: 10

- name: 
  shell: "/usr/bin/nohup {{LIBERTY_HOME}}/bin/server status {{jvm_name}}"
  register: exit_jvm_status
  failed_when: '"FAILED" in exit_jvm_status.stderr'

- name: Printing the JVM Status after completing actions
  debug:
    msg: "{{exit_jvm_status.stdout}}"
