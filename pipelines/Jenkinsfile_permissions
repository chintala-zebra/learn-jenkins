properties([
    parameters(
        [
            name: 'ENVIRONMENT',
            $class: 'ChoiceParameter',
            choiceType: 'PT_SINGLE_SELECT',
            script: [
                $class: 'GroovyScript',
                script: [
                    script: '''
                    def build = Thread.currentThread().toString()
                    def regexp= ".+?/job/([^/]+)/.*"
                    def match = build  =~ regexp
                    def jobName = match[0][1]
                    return [jobName]
                    ''',
                    sandbox: 'true',
                    classpath: []
                ]
            ]
        ],[
            name: 'CLUSTER',
            $class: 'CascadeChoiceParameter',
            choiceType: 'PT_SINGLE_SELECT',
            description: 'Select the Cluster',
            referencedParameters: 'ENVIRONMENT',
            script: [
                $class: 'GroovyScript',
                fallbackScript: [
                    classpath: [],
                    sandbox: false,
                    script: 'return [\'ERROR\']'
                ],
                script: [
                    classpath: [],
                    sandbox: false,
                    script:  
                    '''
                      if (SNOWTICKET == "Sandbox") {
                        return '[SB001,SB002]'
                      }
                      else
                      {
                        return '[PP001,PP002]'
                      }
                    '''
                ]
            ]
        ]
    )
])

pipeline {
    agent any

    stages {
        stage('Print the Values') {
            steps {
                echo "Environment: ${params.ENVIRONMENT}"
                echo "Choice: ${params.CLUSTER}"
            }
        }
    }
}