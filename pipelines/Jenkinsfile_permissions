properties([
    parameters([
        booleanParam(name: 'NOTIFY_MIDDLEWARE', defaultValue: true, description: 'Do you want to publish results to Middleware Channel?'),
        [
            name: 'ENVIRONMENT',
            $class: 'ChoiceParameter',
            choiceType: 'PT_SINGLE_SELECT',
            script: [
                $class: 'GroovyScript',
                    sandbox: 'true',
                    classpath: [],
                script: [
                    script: '''
                    def build = Thread.currentThread().toString()
                    def regexp= ".+?/job/([^/]+)/.*"
                    def match = build  =~ regexp
                    def jobName = match[0][1]
                    def parts = jobName.split('_');
                    return [parts[2]]
                    '''
                ]
            ]
        ],
        [
            name: 'CLUSTER_NAME',
            $class: 'CascadeChoiceParameter',
            choiceType: 'PT_SINGLE_SELECT',
            referencedParameters: 'ENVIRONMENT',
            script: 
            [
                $class: 'GroovyScript',
                fallbackScript: [
                    classpath: [],
                    sandbox: false,
                    script: 'return [\'ERROR\']'
                ],
                script: [
                    classpath: [],
                    sandbox: false,
                    script:  
                    '''
                        import groovy.io.FileType

                            def list = []
                            list.add('')
                            def dir = new File("/inventory/${ENVIRONMENT}/")
                            dir.eachFileRecurse (FileType.DIRECTORIES) { file ->
                                list << file.name
                            }
                            return list.sort() - 'group_vars' 
                    '''
                ]
            ]
        ],
        [
            name: 'APPLICATION',
            $class: 'CascadeChoiceParameter',
            choiceType: 'PT_SINGLE_SELECT',
            description: '',
            referencedParameters: 'ENVIRONMENT, CLUSTER_NAME',
            script: [
                $class: 'GroovyScript',
                fallbackScript: [
                    classpath: [],
                    sandbox: false,
                    script: 'return [\'ERROR\']'
                ],
                script: [
                    classpath: [],
                    sandbox: false,
                    script:  
                    '''
                        import groovy.io.FileType
                        if (CLUSTER_NAME.isEmpty() || CLUSTER_NAME==""){
                            return ''
                        }
                        else
                        {                        
                            def list = []
                            list.add('')
                            def dir = new File("/inventory/${ENVIRONMENT}/${CLUSTER_NAME}")
                            dir.eachFile (FileType.FILES) { file ->
                                list << file.name.replaceAll('.yml','');
                            }
                            return list
                        }
                    '''
                ]
            ]
        ]
        
    ])
])

pipeline {
    agent any
    stages {
        stage('Print the Values') {
            steps {
                echo "Environment: ${params.ENVIRONMENT}"
                echo "Cluster Name: ${params.CLUSTER_NAME}"
                echo "Application Name: ${params.APPLICATION}"
                sh "exit 1"
            }
        }
        stage("Build Notification") {
			steps {
                script {
                    if (params.NOTIFY_MIDDLEWARE) {
                    office365ConnectorSend webhookUrl: MIDDLEWARE_TEAMS_CHANNEL,
                        status: "Success",
                        factDefinitions: [
                            [name: "Environment", template:  ENVIRONMENT],
                            [name: "Cluster", template: CLUSTER_NAME],
                            [name: "Application", template: APPLICATION]                            
                        ]
                    }
                }
			}
		}
    }
    post {
        unsuccessful {
            office365ConnectorSend webhookUrl: MIDDLEWARE_TEAMS_CHANNEL,
                factDefinitions: [
                        [name: "Environment", template:  ENVIRONMENT],
                        [name: "Cluster", template: CLUSTER_NAME],
                        [name: "Application", template: APPLICATION]
                    ]
        }
        cleanup {
            cleanWs()
        }

    }
}