properties([
    parameters([
        [$class: 'ChoiceParameter',
            choiceType: 'PT_SINGLE_SELECT',
            filterable: false,
            name: 'PartnerName',
            script: [$class: 'GroovyScript',
                fallbackScript: [
                    classpath: [],
                    sandbox: true,
                    script: 'return ["ERROR"]'
                ],
                script: [
                    classpath: [],
                    sandbox: true,
                    script: """
                        return ["single_partner"]
                    """.stripIndent()
                ]
            ]
        ],
        [$class: 'CascadeChoiceParameter',
            choiceType: 'PT_SINGLE_SELECT',
            filterLength: 1,
            filterable: false,
            name: 'AutoCalcParam',
            referencedParameters: 'PartnerName',
            script: [$class: 'GroovyScript',
                fallbackScript: [
                    classpath: [],
                    sandbox: true,
                    script: 'return ["ERROR"]'
                ],
                script: [
                    classpath: [],
                    sandbox: true,
                    script: """
                        def getGFEPartners(String partnerName) { 
                            return [partnerName+'_aaa', partnerName+'_bbb']
                        }
                        return getGFEPartners(PartnerName)
                         """.stripIndent()
                ]
            ]
        ]
    ])
])

pipeline {
    agent any
    stages {
        stage('Print the Values') {
            steps {
                echo "Environment: ${params.ENVIRONMENT}"
                echo "Cluster Name: ${params.CLUSTER_NAME}"
                echo "Application Name: ${params.APPLICATION}"
                //sh "exit 1"
            }
        }
    }
    post {
        cleanup {
            cleanWs()
        }

    }
}